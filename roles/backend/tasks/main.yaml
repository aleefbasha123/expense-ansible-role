- name: disable defaulit nodejs
  ansible.builtin.command: dnf module disable  nodejs -y

- name: enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: installed
  loop:
  - nodejs
  - mysql

  
- name: create expense user
  ansible.builtin.user:
    name: expense
    state: present

- name: careate app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: downlaod backned code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip backend code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip # By default 
    dest: /app
    remote_src: yes

- name: install npm dependecnes
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: cpoy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python db dependences
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: importdata into mysql
#ansible.builtin.shell: | 
#mysql -h {{ login_host }} -uroot -p{{ login_password }} < /app/schema/backend.sql 
  community.mysql.mysql_db:
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    state: import
    name: all
    #ignore_errors: yes
  

- name: deamon relaod
  ansible.builtin.systemd_service:
   daemon_reload: True

- name: start and enable backend 
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes
